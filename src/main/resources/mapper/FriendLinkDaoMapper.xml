<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.blog.mapper.FriendLinkDao">
    <!--关于ResultMap 如果实体类与数据库的行相同则不用写，反之则需要写ResultMap-->
    <sql id="table">cc_blog_friend_link</sql>

    <select id="getFriendLinkAllByAdmin" resultType="com.cc.blog.model.FriendLink">
        SELECT 
        *
        FROM 
        <include refid="table" />
    </select>

    <select id="getFriendLinkAll" resultType="com.cc.blog.model.FriendLink">
        SELECT
        friend_link_id,friend_link_private_id,friend_link_user,friend_link_url
        FROM
        <include refid="table" />
    </select>

    <select id="getFriendLink" resultType="com.cc.blog.model.FriendLink">
        SELECT
        *
        FROM
        <include refid="table"/>
        WHERE
        friend_link_private_id = #{privateId}
    </select>
    
    <insert id="insertFriendLink" parameterType="com.cc.blog.model.FriendLink">
        INSERT INTO
        <include refid="table"/>
        (friend_link_private_id,friend_link_user,friend_link_url)
        VALUES
        (#{friend_link_private_id},#{friend_link_user},#{friend_link_url})
    </insert>

    <update id="updateFriendLink" parameterType="com.cc.blog.model.FriendLink">
        UPDATE
        <include refid="table"/>
        SET
        friend_link_private_id = #{friend_link_private_id},friend_link_user = #{friend_link_user},
        friend_link_url = #{friend_link_url},friend_link_check = #{friend_link_check}
        WHERE
        friend_link_id = #{friend_link_id}
    </update>

    <delete id="deleteFriendLink" parameterType="com.cc.blog.model.FriendLink">
        DELETE FROM
        <include refid="table"/>
        WHERE
        friend_link_private_id = #{privateId}
    </delete>

</mapper>